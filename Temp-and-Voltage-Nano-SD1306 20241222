#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "AvenirLTStd_Heavy24pt7b.h"  // Include new font for temperature
#include "AvenirLTStd_Heavy10pt7b.h"  // Include new font for voltage

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Voltage sensor parameters
#define ADC_MAX 1023.0    // ADC resolution (10-bit for Arduino Nano)
#define VREF 5.0          // Reference voltage for Arduino Nano
#define R1 29850.0        // Resistor R1 in the divider (in ohms)
#define R2 7500.0         // Resistor R2 in the divider (in ohms)

// Calibration parameters
float calibrationFactor1 = 0.9; // Calibration factor for sensor 1
float calibrationFactor2 = 0.9; // Calibration factor for sensor 2

// Analog input pins for sensors
#define SENSOR1_PIN A0     // Analog input for the first voltage sensor
#define SENSOR2_PIN A1     // Analog input for the second voltage sensor

void setup() {
  Serial.begin(115200);

  // Initialize the OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }

  display.clearDisplay();
  display.setTextColor(SSD1306_WHITE);
}

void loop() {
  // Read raw ADC values
  int adcValue1 = analogRead(SENSOR1_PIN);
  int adcValue2 = analogRead(SENSOR2_PIN);

  // Convert ADC values to voltages (scaled for divider)
  float rawVoltage1 = (adcValue1 / ADC_MAX) * VREF * ((R1 + R2) / R2);
  float rawVoltage2 = (adcValue2 / ADC_MAX) * VREF * ((R1 + R2) / R2);

  // Apply calibration adjustments
  float calibratedVoltage1 = rawVoltage1 * calibrationFactor1;
  float calibratedVoltage2 = rawVoltage2 * calibrationFactor2;

  // Clear the display
  display.clearDisplay();

  // Set font and display voltage for Sensor 1 (Top of OLED)
  display.setFont(&AvenirLTStd_Heavy10pt7b); // Use new font for Sensor 1
  int16_t x1, y1;
  uint16_t w, h;
  String voltageText1 = String(calibratedVoltage1, 2) + " V"; // Add space before 'V'
  display.getTextBounds(voltageText1, 0, 0, &x1, &y1, &w, &h);
  display.setCursor((SCREEN_WIDTH - w) / 2, 10); // Centered horizontally, near top
  display.print(voltageText1);

  // Set font and display integer value for Sensor 2 (Bottom of OLED)
  display.setFont(&AvenirLTStd_Heavy24pt7b); // Use new font for Sensor 2
  int calibratedVoltage2Int = round(calibratedVoltage2); // Convert to integer
  String voltageText2 = String(calibratedVoltage2Int) + " \xB0" + "C"; // Degree symbol (0xB0) added
  display.getTextBounds(voltageText2, 0, 0, &x1, &y1, &w, &h);
  display.setCursor((SCREEN_WIDTH - w) / 2, 50); // Centered horizontally, near bottom
  display.print(voltageText2);

  // Show the content on OLED
  display.display();

  // Print raw and calibrated values to Serial Monitor for debugging
  Serial.print("Sensor 1 -> Raw Voltage: ");
  Serial.print(rawVoltage1);
  Serial.print(" V, Calibrated Voltage: ");
  Serial.print(calibratedVoltage1);
  Serial.println(" V");

  Serial.print("Sensor 2 -> Raw Voltage: ");
  Serial.print(rawVoltage2);
  Serial.print(" V, Calibrated Voltage (Integer): ");
  Serial.print(calibratedVoltage2Int);
  Serial.println(" Â°C");

  delay(1000);  // Update every second
}
